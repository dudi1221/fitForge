version: '3.8'
services:
  pg:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=dudi
      - POSTGRES_PASSWORD=shuki1221
    ports:
      - '5432:5432'
    volumes:
      - pg:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 25s
      retries: 3
  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning 
    volumes:
      - ./reids:/data

  server: 
    container_name: server
    build: ./server
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - 4500:4500
    environment:
      # NODE_ENV: production
      NODE_ENV: development
      PGHOST: pg
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGNAME: postgres
      PGDATABASE: shopping_list
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: 0ebf64db15d5c7e726491f9df6eed630a63f58027dda470e46b1de4ed1a083079c955df979d30d16189a88dd3700e18a1d9e6f0792c959c33c11e177b52b30a9
      EXPRESSPORT: 4500
    links:
      - pg
      - redis
      - client
    # develop:
    #   watch:
    #     - action: rebuild
    #       path: ./server/app/package.json
    volumes:
      - ./server/app/src:/app/src

  client:
    container_name: client
    build: ./client
    ports:
      - "3000:3000"
    # deploy:
    #   watch:
    #     - action: rebuild
    #       path: ./client/vite-project/package.json
    volumes:
    - ./client/vite-project/src:/app/src
    environment:
      - NODE_ENV=development




volumes:
    redis:
      driver: local
    pg:
      driver: local